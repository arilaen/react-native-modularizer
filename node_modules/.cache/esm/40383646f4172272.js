let Mustache,fs;_f41‍.x([["mustacheRenderUsingTemplateFile",()=>mustacheRenderUsingTemplateFile],["mustacheRenderToOutputFileUsingTemplateFile",()=>mustacheRenderToOutputFileUsingTemplateFile]]);_f41‍.w("mustache",[["default",["Mustache"],function(v){Mustache=v}]]);_f41‍.w("fs-extra",[["default",["fs"],function(v){fs=v}]]);// Copied/adapted from Electrode Native




// =============================================================================
// Mustache related utilities
// =============================================================================

// Mustache render using a template file
// filename: Path to the template file
// view: Mustache view to apply to the template
// returns: Rendered string output
       async function mustacheRenderUsingTemplateFile(
  filename,
  view,
) {
  const template = await fs.readFile(filename, 'utf8')
  return Mustache.render(template, view);
}

// Mustache render to an output file using a template file
// templateFilename: Path to the template file
// view: Mustache view to apply to the template
// outputFile: Path to the output file
       async function mustacheRenderToOutputFileUsingTemplateFile(
  templateFilename,
  view,
  outputFile,
) {
  const output = await mustacheRenderUsingTemplateFile(templateFilename, view);
  await fs.writeFile(outputFile || templateFilename, output, 'utf8');
  return;
}
